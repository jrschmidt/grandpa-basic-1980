// Generated by CoffeeScript 1.7.1
xdescribe("Console line buffer", function() {
  beforeEach(function() {
    this.console = new BasicConsole;
    return this.buffer = this.console.buffer;
  });
  afterEach(function() {
    return this.console.clear_all();
  });
  it("should add characters to the buffer", function() {
    expect(this.buffer.chars).toEqual("");
    this.buffer.add("4");
    expect(this.buffer.chars).toEqual("4");
    this.buffer.add("0");
    expect(this.buffer.chars).toEqual("40");
    this.buffer.add(" ");
    expect(this.buffer.chars).toEqual("40 ");
    this.buffer.add("X");
    expect(this.buffer.chars).toEqual("40 X");
    this.buffer.add("=");
    expect(this.buffer.chars).toEqual("40 X=");
    this.buffer.add("Y");
    expect(this.buffer.chars).toEqual("40 X=Y");
    this.buffer.add("+");
    expect(this.buffer.chars).toEqual("40 X=Y+");
    this.buffer.add("1");
    expect(this.buffer.chars).toEqual("40 X=Y+1");
    this.buffer.add("0");
    expect(this.buffer.chars).toEqual("40 X=Y+10");
    this.buffer.add("0");
    return expect(this.buffer.chars).toEqual("40 X=Y+100");
  });
  it("should delete the end character from the buffer", function() {
    this.buffer.chars = "40X";
    expect(this.buffer.chars).toEqual("40X");
    this.buffer.trim();
    expect(this.buffer.chars).toEqual("40");
    this.buffer.add(" ");
    this.buffer.add("X");
    this.buffer.add("=");
    this.buffer.add("Y");
    this.buffer.add("+");
    this.buffer.add("+");
    expect(this.buffer.chars).toEqual("40 X=Y++");
    this.buffer.trim();
    expect(this.buffer.chars).toEqual("40 X=Y+");
    this.buffer.add("1");
    this.buffer.add("0");
    this.buffer.add("0");
    this.buffer.add("0");
    expect(this.buffer.chars).toEqual("40 X=Y+1000");
    this.buffer.trim();
    return expect(this.buffer.chars).toEqual("40 X=Y+100");
  });
  return it("should print the characters in the buffer, then clear the buffer", function() {
    var ch, _i, _len, _ref;
    expect(this.buffer.chars).toEqual("");
    _ref = "40 X=Y+100";
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      ch = _ref[_i];
      this.buffer.add(ch);
    }
    expect(this.buffer.chars).toEqual("40 X=Y+100");
    this.buffer.print();
    expect(this.console.line_text).toEqual("40 X=Y+100");
    return expect(this.buffer.chars).toEqual("");
  });
});
