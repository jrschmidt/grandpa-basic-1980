GB80 = require('../gb80');
KeyHelper = GB80.KeyHelper;

describe("Key helper methods", function() {

  beforeEach(function() {
    this.keyHelper = new KeyHelper;
    this.keyHelper.monitor_color = "amber";
  });

  it("should map key code - shift state combinations to characters", function() {
    expect(this.keyHelper.char(32, "<no-shift>")).toEqual(" ");
    expect(this.keyHelper.char(32, "<shift>")).toEqual(" ");
    expect(this.keyHelper.char(173, "<no-shift>")).toEqual("-");
    expect(this.keyHelper.char(173, "<shift>")).toEqual("_");
    expect(this.keyHelper.char(61, "<no-shift>")).toEqual("=");
    expect(this.keyHelper.char(61, "<shift>")).toEqual("+");
    expect(this.keyHelper.char(59, "<no-shift>")).toEqual(";");
    expect(this.keyHelper.char(59, "<shift>")).toEqual(":");
    expect(this.keyHelper.char(189, "<no-shift>")).toEqual("-");
    expect(this.keyHelper.char(189, "<shift>")).toEqual("_");
    expect(this.keyHelper.char(187, "<no-shift>")).toEqual("=");
    expect(this.keyHelper.char(187, "<shift>")).toEqual("+");
    expect(this.keyHelper.char(186, "<no-shift>")).toEqual(";");
    expect(this.keyHelper.char(186, "<shift>")).toEqual(":");
    expect(this.keyHelper.char(48, "<no-shift>")).toEqual("0");
    expect(this.keyHelper.char(48, "<shift>")).toEqual(")");
    expect(this.keyHelper.char(49, "<no-shift>")).toEqual("1");
    expect(this.keyHelper.char(49, "<shift>")).toEqual("!");
    expect(this.keyHelper.char(50, "<no-shift>")).toEqual("2");
    expect(this.keyHelper.char(50, "<shift>")).toEqual("@");
    expect(this.keyHelper.char(51, "<no-shift>")).toEqual("3");
    expect(this.keyHelper.char(51, "<shift>")).toEqual("#");
    expect(this.keyHelper.char(52, "<no-shift>")).toEqual("4");
    expect(this.keyHelper.char(52, "<shift>")).toEqual("$");
    expect(this.keyHelper.char(53, "<no-shift>")).toEqual("5");
    expect(this.keyHelper.char(53, "<shift>")).toEqual("%");
    expect(this.keyHelper.char(54, "<no-shift>")).toEqual("6");
    expect(this.keyHelper.char(54, "<shift>")).toEqual("^");
    expect(this.keyHelper.char(55, "<no-shift>")).toEqual("7");
    expect(this.keyHelper.char(55, "<shift>")).toEqual("&");
    expect(this.keyHelper.char(56, "<no-shift>")).toEqual("8");
    expect(this.keyHelper.char(56, "<shift>")).toEqual("*");
    expect(this.keyHelper.char(57, "<no-shift>")).toEqual("9");
    expect(this.keyHelper.char(57, "<shift>")).toEqual("(");
    expect(this.keyHelper.char(96, "<no-shift>")).toEqual("0");
    expect(this.keyHelper.char(96, "<shift>")).toEqual("0");
    expect(this.keyHelper.char(97, "<no-shift>")).toEqual("1");
    expect(this.keyHelper.char(97, "<shift>")).toEqual("1");
    expect(this.keyHelper.char(98, "<no-shift>")).toEqual("2");
    expect(this.keyHelper.char(98, "<shift>")).toEqual("2");
    expect(this.keyHelper.char(99, "<no-shift>")).toEqual("3");
    expect(this.keyHelper.char(99, "<shift>")).toEqual("3");
    expect(this.keyHelper.char(100, "<no-shift>")).toEqual("4");
    expect(this.keyHelper.char(100, "<shift>")).toEqual("4");
    expect(this.keyHelper.char(101, "<no-shift>")).toEqual("5");
    expect(this.keyHelper.char(101, "<shift>")).toEqual("5");
    expect(this.keyHelper.char(102, "<no-shift>")).toEqual("6");
    expect(this.keyHelper.char(102, "<shift>")).toEqual("6");
    expect(this.keyHelper.char(103, "<no-shift>")).toEqual("7");
    expect(this.keyHelper.char(103, "<shift>")).toEqual("7");
    expect(this.keyHelper.char(104, "<no-shift>")).toEqual("8");
    expect(this.keyHelper.char(104, "<shift>")).toEqual("8");
    expect(this.keyHelper.char(105, "<no-shift>")).toEqual("9");
    expect(this.keyHelper.char(105, "<shift>")).toEqual("9");
    expect(this.keyHelper.char(107, "<no-shift>")).toEqual("+");
    expect(this.keyHelper.char(107, "<shift>")).toEqual("+");
    expect(this.keyHelper.char(109, "<no-shift>")).toEqual("-");
    expect(this.keyHelper.char(109, "<shift>")).toEqual("-");
    expect(this.keyHelper.char(106, "<no-shift>")).toEqual("*");
    expect(this.keyHelper.char(106, "<shift>")).toEqual("*");
    expect(this.keyHelper.char(111, "<no-shift>")).toEqual("/");
    expect(this.keyHelper.char(111, "<shift>")).toEqual("/");
    expect(this.keyHelper.char(110, "<no-shift>")).toEqual(".");
    expect(this.keyHelper.char(110, "<shift>")).toEqual(".");
    expect(this.keyHelper.char(65, "<no-shift>")).toEqual("A");
    expect(this.keyHelper.char(65, "<shift>")).toEqual("A");
    expect(this.keyHelper.char(66, "<no-shift>")).toEqual("B");
    expect(this.keyHelper.char(66, "<shift>")).toEqual("B");
    expect(this.keyHelper.char(72, "<no-shift>")).toEqual("H");
    expect(this.keyHelper.char(72, "<shift>")).toEqual("H");
    expect(this.keyHelper.char(78, "<no-shift>")).toEqual("N");
    expect(this.keyHelper.char(78, "<shift>")).toEqual("N");
    expect(this.keyHelper.char(81, "<no-shift>")).toEqual("Q");
    expect(this.keyHelper.char(81, "<shift>")).toEqual("Q");
    expect(this.keyHelper.char(85, "<no-shift>")).toEqual("U");
    expect(this.keyHelper.char(85, "<shift>")).toEqual("U");
    expect(this.keyHelper.char(88, "<no-shift>")).toEqual("X");
    expect(this.keyHelper.char(88, "<shift>")).toEqual("X");
    expect(this.keyHelper.char(90, "<no-shift>")).toEqual("Z");
    expect(this.keyHelper.char(90, "<shift>")).toEqual("Z");
    expect(this.keyHelper.char(188, "<no-shift>")).toEqual(",");
    expect(this.keyHelper.char(188, "<shift>")).toEqual("<");
    expect(this.keyHelper.char(190, "<no-shift>")).toEqual(".");
    expect(this.keyHelper.char(190, "<shift>")).toEqual(">");
    expect(this.keyHelper.char(191, "<no-shift>")).toEqual("/");
    expect(this.keyHelper.char(191, "<shift>")).toEqual("?");
    expect(this.keyHelper.char(192, "<no-shift>")).toEqual("`");
    expect(this.keyHelper.char(192, "<shift>")).toEqual("~");
    expect(this.keyHelper.char(219, "<no-shift>")).toEqual("[");
    expect(this.keyHelper.char(219, "<shift>")).toEqual("{");
    expect(this.keyHelper.char(221, "<no-shift>")).toEqual("]");
    expect(this.keyHelper.char(221, "<shift>")).toEqual("}");
    expect(this.keyHelper.char(222, "<no-shift>")).toEqual("'");
    expect(this.keyHelper.char(222, "<shift>")).toEqual('"');
  });

  it("should map characters to sprite coordinates", function() {
    expect(this.keyHelper.spriteXY("!")).toEqual([99, 72]);
    expect(this.keyHelper.spriteXY("#")).toEqual([33, 90]);
    expect(this.keyHelper.spriteXY("+")).toEqual([11, 54]);
    expect(this.keyHelper.spriteXY("0")).toEqual([0, 36]);
    expect(this.keyHelper.spriteXY("3")).toEqual([33, 36]);
    expect(this.keyHelper.spriteXY("<")).toEqual([88, 54]);
    expect(this.keyHelper.spriteXY("@")).toEqual([22, 90]);
    expect(this.keyHelper.spriteXY("A")).toEqual([0, 0]);
    expect(this.keyHelper.spriteXY("B")).toEqual([11, 0]);
    expect(this.keyHelper.spriteXY("Q")).toEqual([33, 18]);
    expect(this.keyHelper.spriteXY("X")).toEqual([110, 18]);
    expect(this.keyHelper.spriteXY("Z")).toEqual([132, 18]);
    expect(this.keyHelper.spriteXY("}")).toEqual([77, 90]);
  });

});
