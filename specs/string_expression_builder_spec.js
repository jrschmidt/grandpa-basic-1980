// Generated by CoffeeScript 1.7.1
describe("String expression builder", function() {
  return xit("should build a usable key-value object from a string expression 'parse object' array", function() {
    var expected, expt, expt2, expt3, k, n, result, stack, _i, _results;
    this.helper = new StrExpBuilder;
    stack = [];
    expected = [];
    stack[0] = ["<string_expression>", "<string_literal>", "HAPPY THURSDAY!", "<str_exp_end>"];
    expected[0] = {
      parts: [["<str>", "HAPPY THURSDAY!"]]
    };
    stack[1] = ["<string_expression>", "<string_variable>", "R7", "<str_exp_end>"];
    expected[1] = {
      parts: [["<var>", "R7"]]
    };
    stack[2] = ["<string_expression>", "<string_variable>", "M", "<plus>", "<string_literal>", " IS NOT THE CORRECT ANSWER", "<str_exp_end>"];
    expt2 = [["<var>", "M"], ["<str>", " IS NOT THE CORRECT ANSWER"]];
    expected[2] = {
      parts: expt2
    };
    stack[3] = ["<string_expression>", "<string_variable>", "J0", "<plus>", "<string_literal>", " AND ANY ", "<plus>", "<string_variable>", "H1", "<plus>", "<string_literal>", " WITH ", "<plus>", "<string_variable>", "H4", "<str_exp_end>"];
    expt3 = [["<var>", "J0"], ["<str>", " AND ANY "], ["<var>", "H1"], ["<str>", " WITH "], ["<var>", "H4"]];
    expected[3] = {
      parts: expt3
    };
    _results = [];
    for (n = _i = 0; _i <= 3; n = ++_i) {
      result = this.helper.split(stack[n]);
      expt = expected[n].parts;
      _results.push((function() {
        var _j, _ref, _results1;
        _results1 = [];
        for (k = _j = 0, _ref = expt.length - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; k = 0 <= _ref ? ++_j : --_j) {
          expect(result[k][0]).toEqual(expt[k][0]);
          _results1.push(expect(result[k][1]).toEqual(expt[k][1]));
        }
        return _results1;
      })());
    }
    return _results;
  });
});
