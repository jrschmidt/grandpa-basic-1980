// Generated by CoffeeScript 1.7.1
describe("BASIC Console", function() {
  beforeEach(function() {
    this.console = new BasicConsole;
    return this.console.log_chars = true;
  });
  return it("should print a character at a given location", function() {
    this.console.ch("A", 0, 0);
    expect(this.console.msg).toEqual("A [0,0]");
    this.console.ch("B", 0, 10);
    expect(this.console.msg).toEqual("B [0,10]");
    this.console.ch("C", 0, 20);
    expect(this.console.msg).toEqual("C [0,20]");
    this.console.ch("D", 0, 30);
    expect(this.console.msg).toEqual("D [0,30]");
    this.console.ch("E", 0, 40);
    expect(this.console.msg).toEqual("E [0,40]");
    this.console.ch("F", 0, 50);
    expect(this.console.msg).toEqual("F [0,50]");
    this.console.ch("G", 0, 60);
    expect(this.console.msg).toEqual("G [0,60]");
    this.console.ch("H", 1, 5);
    expect(this.console.msg).toEqual("H [1,5]");
    this.console.ch("I", 1, 15);
    expect(this.console.msg).toEqual("I [1,15]");
    this.console.ch("J", 1, 25);
    expect(this.console.msg).toEqual("J [1,25]");
    this.console.ch("K", 1, 35);
    expect(this.console.msg).toEqual("K [1,35]");
    this.console.ch("L", 1, 45);
    expect(this.console.msg).toEqual("L [1,45]");
    this.console.ch("M", 1, 55);
    expect(this.console.msg).toEqual("M [1,55]");
    this.console.ch("N", 2, 0);
    expect(this.console.msg).toEqual("N [2,0]");
    this.console.ch("O", 2, 10);
    expect(this.console.msg).toEqual("O [2,10]");
    this.console.ch("P", 2, 20);
    expect(this.console.msg).toEqual("P [2,20]");
    this.console.ch("Q", 2, 30);
    expect(this.console.msg).toEqual("Q [2,30]");
    this.console.ch("R", 2, 40);
    expect(this.console.msg).toEqual("R [2,40]");
    this.console.ch("S", 2, 50);
    expect(this.console.msg).toEqual("S [2,50]");
    this.console.ch("T", 2, 60);
    expect(this.console.msg).toEqual("T [2,60]");
    this.console.ch("U", 3, 5);
    expect(this.console.msg).toEqual("U [3,5]");
    this.console.ch("V", 3, 15);
    expect(this.console.msg).toEqual("V [3,15]");
    this.console.ch("W", 3, 25);
    expect(this.console.msg).toEqual("W [3,25]");
    this.console.ch("X", 3, 35);
    expect(this.console.msg).toEqual("X [3,35]");
    this.console.ch("Y", 3, 45);
    expect(this.console.msg).toEqual("Y [3,45]");
    this.console.ch("Z", 3, 55);
    expect(this.console.msg).toEqual("Z [3,55]");
    this.console.ch("0", 4, 20);
    expect(this.console.msg).toEqual("0 [4,20]");
    this.console.ch("1", 5, 21);
    expect(this.console.msg).toEqual("1 [5,21]");
    this.console.ch("2", 6, 22);
    expect(this.console.msg).toEqual("2 [6,22]");
    this.console.ch("3", 7, 23);
    expect(this.console.msg).toEqual("3 [7,23]");
    this.console.ch("4", 8, 24);
    expect(this.console.msg).toEqual("4 [8,24]");
    this.console.ch("5", 9, 25);
    expect(this.console.msg).toEqual("5 [9,25]");
    this.console.ch("6", 10, 26);
    expect(this.console.msg).toEqual("6 [10,26]");
    this.console.ch("7", 11, 27);
    expect(this.console.msg).toEqual("7 [11,27]");
    this.console.ch("8", 12, 28);
    expect(this.console.msg).toEqual("8 [12,28]");
    this.console.ch("9", 13, 29);
    return expect(this.console.msg).toEqual("9 [13,29]");
  });
});
