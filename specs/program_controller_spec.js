// Generated by CoffeeScript 1.7.1
describe("Program Controller", function() {
  beforeEach(function() {
    this.prog = new ProgramController;
    this.commands = this.prog.commands;
    this.helpers = this.commands.helpers;
    this.num_vars = this.helpers.num_vars;
    this.str_vars = this.helpers.str_vars;
    this.num_eval = this.helpers.num_eval;
    this.str_eval = this.helpers.str_eval;
    this.bx_eval = this.helpers.bx_eval;
    this.line300 = {
      line_no: 300,
      command: "<remark>",
      text: '300 REM'
    };
    this.line308 = {
      line_no: 308,
      command: "<remark>",
      text: '308 REM THIS IS THE LINE 308 REMARK'
    };
    this.line340 = {
      line_no: 340,
      command: "<print>",
      text: '340 PRINT "WELCOME TO GRANDPA BASIC 1980"',
      expression: [["<str>", "WELCOME TO GRANDPA BASIC 1980"]]
    };
    this.line342 = {
      line_no: 342,
      command: "<gosub>",
      text: '342 GOSUB 1200"',
      dest: 1200
    };
    this.line345 = {
      line_no: 345,
      command: "<goto>",
      text: '345 GOTO 360',
      dest: 360
    };
    this.line348 = {
      line_no: 348,
      command: "<remark>",
      text: '348 REM THIS IS THE LINE 348 REMARK'
    };
    this.line350 = {
      line_no: 350,
      command: "<print>",
      text: '350 PRINT "THIS EMULATES THE EARLY"',
      expression: [["<str>", "THIS EMULATES THE EARLY"]]
    };
    this.line355 = {
      line_no: 355,
      command: "<goto>",
      text: '355 GOTO 370',
      dest: 370
    };
    this.line358 = {
      line_no: 358,
      command: "<remark>",
      text: '358 REM THIS IS THE LINE 358 REMARK'
    };
    this.line359 = {
      line_no: 359,
      command: "<end>",
      text: '359 END'
    };
    this.line360 = {
      line_no: 360,
      command: "<print>",
      text: '360 PRINT "LINE NUMBER BASIC"',
      expression: [["<str>", "LINE NUMBER BASIC"]]
    };
    this.line362 = {
      line_no: 362,
      command: "<goto>",
      text: '362 GOTO 1999',
      dest: 1999
    };
    this.line365 = {
      line_no: 365,
      command: "<goto>",
      text: '365 GOTO 350',
      dest: 350
    };
    this.line368 = {
      line_no: 368,
      command: "<remark>",
      text: '368 REM THIS IS THE LINE 368 REMARK'
    };
    this.line370 = {
      line_no: 370,
      command: "<print>",
      text: '370 PRINT "THAT WAS COMMON AROUND 1980"',
      expression: [["<str>", "THAT WAS COMMON AROUND 1980"]]
    };
    this.line388 = {
      line_no: 388,
      command: "<remark>",
      text: '388 REM THIS IS THE LINE 388 REMARK'
    };
    this.line510 = {
      line_no: 510,
      command: "<numeric_assignment>",
      text: '510 A=77',
      operand: "A",
      expression: {
        exp: "<num>",
        value: 77
      }
    };
    this.line520 = {
      line_no: 520,
      command: "<numeric_assignment>",
      text: '520 P=3.1416',
      operand: "P",
      expression: {
        exp: "<num>",
        value: 3.1416
      }
    };
    this.line530 = {
      line_no: 530,
      command: "<numeric_assignment>",
      text: '530 Q=302',
      operand: "Q",
      expression: {
        exp: "<num>",
        value: 302
      }
    };
    this.line540 = {
      line_no: 540,
      command: "<numeric_assignment>",
      text: '540 R=203',
      operand: "R",
      expression: {
        exp: "<num>",
        value: 203
      }
    };
    this.line550 = {
      line_no: 550,
      command: "<numeric_assignment>",
      text: '550 T=Q+R',
      operand: "T",
      expression: {
        exp: "<plus>",
        op1: {
          exp: "<var>",
          name: "Q"
        },
        op2: {
          exp: "<var>",
          name: "R"
        }
      }
    };
    this.line560 = {
      line_no: 560,
      command: "<numeric_assignment>",
      text: 'F2=51',
      operand: "F2",
      expression: {
        exp: "<num>",
        value: 51
      }
    };
    this.line570 = {
      line_no: 570,
      command: "<numeric_assignment>",
      text: '570 M=F2/3',
      operand: "M",
      expression: {
        exp: "<divide>",
        op1: {
          exp: "<var>",
          name: "F2"
        },
        op2: {
          exp: "<num>",
          value: 3
        }
      }
    };
    this.line1200 = {
      line_no: 1200,
      command: "<print>",
      text: '1200 PRINT "  * * * THIS IS THE SUBROUTINE (1200) :-)"',
      expression: [["<str>", "  * * * THIS IS THE SUBROUTINE (1200) :-)"]]
    };
    this.line1299 = {
      line_no: 1299,
      command: "<return>",
      text: '1299 RETURN'
    };
    return this.line1999 = {
      line_no: 1999,
      command: "<print>",
      text: '1999 PRINT "WE HAVE REACHED THE END ..."',
      expression: [["<str>", "WE HAVE REACHED THE END ..."]]
    };
  });
  it("should execute PRINT statements", function() {
    var lines;
    lines = {
      "340": this.line340
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(340);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(0);
    return expect(this.prog.output).toEqual("WELCOME TO GRANDPA BASIC 1980");
  });
  it("should run more than one line", function() {
    var lines;
    lines = {
      "340": this.line340,
      "350": this.line350,
      "360": this.line360,
      "370": this.line370
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(340);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(350);
    expect(this.prog.output).toEqual("WELCOME TO GRANDPA BASIC 1980");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(360);
    expect(this.prog.output).toEqual("THIS EMULATES THE EARLY");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(370);
    expect(this.prog.output).toEqual("LINE NUMBER BASIC");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(0);
    return expect(this.prog.output).toEqual("THAT WAS COMMON AROUND 1980");
  });
  it("should pass REM statements without doing anything", function() {
    var lines;
    lines = {
      "300": this.line300,
      "308": this.line308,
      "340": this.line340,
      "348": this.line348,
      "350": this.line350,
      "358": this.line358,
      "360": this.line360,
      "368": this.line368,
      "370": this.line370,
      "388": this.line388
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(300);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(308);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(340);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(348);
    expect(this.prog.output).toEqual("WELCOME TO GRANDPA BASIC 1980");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(350);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(358);
    expect(this.prog.output).toEqual("THIS EMULATES THE EARLY");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(360);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(368);
    expect(this.prog.output).toEqual("LINE NUMBER BASIC");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(370);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(388);
    expect(this.prog.output).toEqual("THAT WAS COMMON AROUND 1980");
    this.prog.run_next_line();
    return expect(this.prog.next_line_no).toEqual(0);
  });
  it("should jump in response to GOTO commands", function() {
    var lines;
    lines = {
      "340": this.line340,
      "345": this.line345,
      "350": this.line350,
      "355": this.line355,
      "360": this.line360,
      "365": this.line365,
      "370": this.line370
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(340);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(345);
    expect(this.prog.output).toEqual("WELCOME TO GRANDPA BASIC 1980");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(360);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(365);
    expect(this.prog.output).toEqual("LINE NUMBER BASIC");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(350);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(355);
    expect(this.prog.output).toEqual("THIS EMULATES THE EARLY");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(370);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(0);
    return expect(this.prog.output).toEqual("THAT WAS COMMON AROUND 1980");
  });
  it("should jump on GOSUB then RETURN", function() {
    var lines;
    lines = {
      "340": this.line340,
      "342": this.line342,
      "350": this.line350,
      "360": this.line360,
      "362": this.line362,
      "1200": this.line1200,
      "1299": this.line1299,
      "1999": this.line1999
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(340);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(342);
    expect(this.prog.output).toEqual("WELCOME TO GRANDPA BASIC 1980");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(1200);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(1299);
    expect(this.prog.output).toEqual("  * * * THIS IS THE SUBROUTINE (1200) :-)");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(350);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(360);
    expect(this.prog.output).toEqual("THIS EMULATES THE EARLY");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(362);
    expect(this.prog.output).toEqual("LINE NUMBER BASIC");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(1999);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(0);
    return expect(this.prog.output).toEqual("WE HAVE REACHED THE END ...");
  });
  it("should stop when it reaches an END statement", function() {
    var lines;
    lines = {
      "340": this.line340,
      "350": this.line350,
      "359": this.line359,
      "360": this.line360,
      "370": this.line370
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(340);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(350);
    expect(this.prog.output).toEqual("WELCOME TO GRANDPA BASIC 1980");
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(359);
    expect(this.prog.output).toEqual("THIS EMULATES THE EARLY");
    this.prog.run_next_line();
    return expect(this.prog.next_line_no).not.toBeDefined();
  });
  return it("should execute numeric assignment statements", function() {
    var lines;
    lines = {
      "510": this.line510,
      "520": this.line520,
      "530": this.line530,
      "540": this.line540,
      "550": this.line550,
      "560": this.line560,
      "570": this.line570
    };
    this.prog.load(lines);
    expect(this.prog.next_line_no).toEqual(510);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(520);
    expect(this.num_vars.get("A")).toEqual(77);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(530);
    expect(this.num_vars.get("P")).toEqual(3.1416);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(540);
    expect(this.num_vars.get("Q")).toEqual(302);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(550);
    expect(this.num_vars.get("R")).toEqual(203);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(560);
    expect(this.num_vars.get("T")).toEqual(505);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(570);
    expect(this.num_vars.get("F2")).toEqual(51);
    this.prog.run_next_line();
    expect(this.prog.next_line_no).toEqual(0);
    return expect(this.num_vars.get("M")).toEqual(17);
  });
});
